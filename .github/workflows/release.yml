name: Release
on:
  workflow_dispatch:
    inputs:
      release_version:
        description: 'Version to release (i.e.: 1.2.0)'
        required: true
      next_version:
        description: 'Next development cycle version (i.e.: 1.3.0-SNAPSHOT)'
        required: true

jobs:
  build:
    name: Build
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Git Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Graphviz
        run: sudo apt install graphviz

      - name: Set Up JDK 8
        uses: actions/setup-java@v4
        with:
          java-version: 8
          distribution: temurin

      - name: Set Release Version ${{ github.event.inputs.release_version }}
        run: mvn -B versions:set -DnewVersion=${{ github.event.inputs.release_version }} -DgenerateBackupPoms=false

      - name: Build and Run Tests
        run:  mvn -B clean install

      - name: Upload Plugin JAR
        uses: actions/upload-artifact@v4
        with:
          name: plugin
          path: |
            graphviz-java/target/graphviz-java-*.jar
            !graphviz-java/target/graphviz-java-*-sources.jar

      - name: Commit, Push and Tag Release Version ${{ github.event.inputs.release_version }}
        uses: EndBug/add-and-commit@v9
        with:
          add: '**/pom.xml'
          author_name: GitHub Actions
          author_email: github-actions@linty-services.com
          message: Release version ${{ github.event.inputs.release_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get Release Commit Hash
        run: echo $(git rev-parse HEAD) > release_commit.txt

      - name: Set Next Development Cycle Version ${{ github.event.inputs.next_version }}
        run: mvn -B versions:set -DnewVersion=${{ github.event.inputs.next_version }} -DgenerateBackupPoms=false

      - name: Commit and Push Next Development Cycle Version ${{ github.event.inputs.next_version }}
        uses: EndBug/add-and-commit@v9
        with:
          add: '**/pom.xml'
          author_name: GitHub Actions
          author_email: github-actions@linty-services.com
          message: Bump version to ${{ github.event.inputs.next_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Commit Hashes
        uses: actions/upload-artifact@v4
        with:
          name: commits
          path: release_commit.txt

  release:
    name: GitHub Release
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download Plugin JAR
        uses: actions/download-artifact@v4
        with:
          name: plugin

      - name: Download Commit Hashes
        uses: actions/download-artifact@v4
        with:
          name: commits

      - name: Read Release Commit Hash
        run: echo "RELEASE_COMMIT=$(head -n 1  release_commit.txt)" >> $GITHUB_ENV

      - name: "GitHub Release: ${{ github.event.inputs.release_version }}"
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.event.inputs.release_version }}
          artifacts: graphviz-java-*.jar
          name: ${{ github.event.inputs.release_version }}
          commit: ${{ env.RELEASE_COMMIT }}
